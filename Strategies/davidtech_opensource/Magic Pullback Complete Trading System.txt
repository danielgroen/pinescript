//@version=5
// Copyright all rights reserved to DaviddTech
strategy('Magic Pullback Complete Trading System @DaviddTech', overlay=true, precision=3, calc_on_every_tick=false, calc_on_order_fills=false, default_qty_type=strategy.percent_of_equity, commission_value=0.05, commission_type=strategy.commission.percent, slippage=1, currency=currency.USD, default_qty_value=5, max_bars_back=3000, initial_capital=100000)

// ****************************************************************************//
// ---------------------------------> Edit here ------------------------------ //
// ****************************************************************************//

isStrategyPlot = input.bool(true, "Plot strategy indicators(except oscillators)", group='Strategy: base')


// 1. EMA
emaLongLen = input.int(title="EMA Long Length", defval=100, group='Strategy: EMA') 
emaMediumLen = input.int(title="EMA Medium Length", defval=50, group='Strategy: EMA') 
emaShortLen = input.int(title="EMA Short Length", defval=25, group='Strategy: EMA') 
priceTrendingdays = input.int(title="Trending price days", defval=10, group='Strategy: EMA') 
closeDistancePercent = input.int(title="EMA Short close below distance", defval=10, group='Strategy: EMA')
isCloseDistanceOnlyBellow = input.bool(title="EIf close distance only bellow", defval=true, group='Strategy: EMA')
isPlotEMASupport = input.bool(true, "Is plot EMA", group='Strategy: EMA')
emaLong = ta.ema(close, emaLongLen)
emaMedium = ta.ema(close, emaMediumLen)
emaShort = ta.ema(close, emaShortLen)
plot(isStrategyPlot and isPlotEMASupport ? emaLong : na, title="Long EMA", linewidth=2, color=color.gray)
plot(isStrategyPlot and isPlotEMASupport ? emaMedium : na, title="Medium EMA", linewidth=2, color=color.orange)
plot(isStrategyPlot and isPlotEMASupport ? emaShort : na, title="Short EMA", linewidth=2, color=color.blue)

trendDaysUp = ta.barssince(emaShort < emaMedium or emaMedium < emaLong or close[2] < emaShort or open[2] < emaShort)

// plot(trendDaysUp) // For debug
// plot(trendDaysDown) // For debug
isNumericalOrderTrendUp = trendDaysUp >= priceTrendingdays

// isPriceAboveAllEMA = isNumericalOrderTrend and low[2] > emaLong and low[2] > emaMedium and low[2] > emaShort
closeDistance = (high-low) * closeDistancePercent / 100
condU1 = (close[1] > (emaShort - closeDistance) and high[1] > emaShort and (close[1] <= emaShort or low[1] <= emaShort))
condU2 = (close[1] > (emaMedium - closeDistance) and high[1] > emaMedium and (close[1] <= emaMedium or low[1] <= emaMedium))
condU3 = (high[1] > emaShort and close[1] > (emaShort - closeDistance) and close[1] < (emaShort + closeDistance))
condU4 = (high[1] > emaMedium and close[1] > (emaMedium - closeDistance) and close[1] < (emaMedium + closeDistance))
isFirstBarTouchOrCloseBelowEMA = isCloseDistanceOnlyBellow ? condU1 or condU2 : condU3 or condU4
// plot(emaShort - closeDistance, title='Upper close distance for short EMA') // Debug
// plot(emaShort + closeDistance, title='Lower close distance  for short EMA')  // Debug
// plot(emaMedium - closeDistance, title='Upper close distance for short EMA') // Debug
// plot(emaMedium + closeDistance, title='Lower close distance  for short EMA')  // Debug
isFirstBarDoNotCloseBellowLongEMA = close[1] > emaLong
isSecondBarCloseAboveShortEma = close > emaShort

trendDaysDown = ta.barssince(emaShort > emaMedium or emaMedium > emaLong or close[2] > emaShort or open[2] > emaShort)
isNumericalOrderTrendDown = trendDaysDown >= priceTrendingdays
condD1 = (close[1] < (emaShort + closeDistance) and low[1] < emaShort and (close[1] >= emaShort or high[1] >= emaShort))
condD2 = (close[1] < (emaMedium + closeDistance) and low[1] < emaMedium and (close[1] >= emaMedium or low[1] >= emaMedium))

condD3 = (low[1] < emaShort and close[1] < (emaShort + closeDistance) and close[1] > (emaShort - closeDistance))
condD4 = (low[1] < emaMedium and close[1] < (emaMedium + closeDistance) and close[1] > (emaMedium - closeDistance))
isFirstBarTouchOrCloseAboveEMA = isCloseDistanceOnlyBellow ? condD1  or condD2 : condD3 or condD4

isFirstBarDoNotCloseAboveLongEMA = close[1] < emaLong
isSecondBarCloseBellowShortEma = close < emaShort

//Full Algo

enter_long = isNumericalOrderTrendUp and isFirstBarTouchOrCloseBelowEMA and isFirstBarDoNotCloseBellowLongEMA and isSecondBarCloseAboveShortEma
enter_short = isNumericalOrderTrendDown and isFirstBarTouchOrCloseAboveEMA and isFirstBarDoNotCloseAboveLongEMA and isSecondBarCloseBellowShortEma
barcolor(enter_long ? color.yellow : na)



force_exit_signal_short = false
force_exit_signal_long = false

//Dashboard lights
_take_long_one = isNumericalOrderTrendUp
_take_long_two = isFirstBarTouchOrCloseBelowEMA and isFirstBarDoNotCloseBellowLongEMA
_take_long_three =  isSecondBarCloseAboveShortEma

_take_short_one = isNumericalOrderTrendDown
_take_short_two = isFirstBarTouchOrCloseAboveEMA and isFirstBarDoNotCloseAboveLongEMA
_take_short_three = isSecondBarCloseBellowShortEma


// TEST
var float longTakeProfit = na
var float longStopLoss = na
if enter_long and strategy.position_size == 0
    longStopLoss := emaMedium
    longTakeProfit := close + (close - emaMedium) * 2


isLongStopLoss = strategy.position_size > 0 and low < longStopLoss

isLongTakeProfit = strategy.position_size > 0 and high > longTakeProfit

strategy.close('Long', isLongStopLoss or isLongTakeProfit, qty_percent=100)
strategy.entry(id='Long', direction=strategy.long, when=enter_long, comment='Long')


var float shortTakeProfit = na
var float shortStopLoss = na
if enter_short and strategy.position_size == 0
	shortStopLoss := emaMedium
    shortTakeProfit := close - (emaMedium - close) * 2


isShortStopLoss = strategy.position_size < 0 and high > shortStopLoss
isShortTakeProfit = strategy.position_size < 0 and low < shortTakeProfit

strategy.close('Short', isShortStopLoss or isShortTakeProfit, qty_percent=100)
strategy.entry(id='Short', direction=strategy.short, when=enter_short, comment='Short')