//@version=4
// ============================================================================== Strategy mode - uncomment to activate
strategy("Ichimoku AI", shorttitle="IchiCloud AI", overlay=true, pyramiding = 0,
  currency = currency.USD, initial_capital = 10000, default_qty_type = strategy.percent_of_equity, default_qty_value = 100,
  calc_on_every_tick = true, calc_on_order_fills = false, commission_type = strategy.commission.percent, commission_value = 0.075)
// ==============================================================================

// ------------------------------------------------------------------------------

ichiCloud_offset   = input(false, title="Standard Ichimoku Cloud")                  // with the visual offset
ichiCloud_noOffset = input(true,  title="Ichimoku Cloud - no offset - no repaint")  // without the visual offset

conversion_prd = input(9, minval=1, title="Conversion Line Period - Tenkan-Sen")
baseline_prd   = input(26, minval=1, title="Base Line Period - Kijun-Sen")
baselineA_prd  = input(52, minval=1, title="Base Line Period - Kijun-Sen (auxiliary)")


leadingSpan_2prd = input(10, minval=1, title="Lagging Span 2 Periods - Senkou Span B")
leadingSpan_2prd20 = input(20, minval=1, title="Lagging Span 2 Periods - Senkou Span B")
leadingSpan_2prd30 = input(30, minval=1, title="Lagging Span 2 Periods - Senkou Span B")
leadingSpan_2prd40 = input(40, minval=1, title="Lagging Span 2 Periods - Senkou Span B")
leadingSpan_2prd50 = input(50, minval=1, title="Lagging Span 2 Periods - Senkou Span B")
leadingSpan_2prd60 = input(60, minval=1, title="Lagging Span 2 Periods - Senkou Span B")
leadingSpan_2prd70 = input(70, minval=1, title="Lagging Span 2 Periods - Senkou Span B")
leadingSpan_2prd80 = input(80, minval=1, title="Lagging Span 2 Periods - Senkou Span B")
leadingSpan_2prd90 = input(90, minval=1, title="Lagging Span 2 Periods - Senkou Span B")
leadingSpan_2prd100 = input(100, minval=1, title="Lagging Span 2 Periods - Senkou Span B")



displacement = input(1, minval=0, title="Displacement: (-) Chikou Span; (+) Senkou Span A")


extra_bars = input(1, minval=0, title="Displacement: additional bars")
laggingSpan_src = input(close, title="Lagging Span price source - Chikou-Span")

donchian(len) => avg(lowest(len), highest(len))
displ = displacement-extra_bars
// ------------------------------------------------------------------------------
// OFFSET:
conversion = donchian(conversion_prd)   // Conversion Line - Tenkan-Sen (9 Period)
baseline  = donchian(baseline_prd)      // Base Line - Kijun-Sen (26 Period)
baselineA = donchian(baselineA_prd)     // Base Line Period - Kijun-Sen (auxiliary)


leadingSpanA = avg(conversion, baseline)
leadingSpanB = donchian(leadingSpan_2prd)
leadingSpanB20 = donchian(leadingSpan_2prd20)
leadingSpanB30 = donchian(leadingSpan_2prd30)
leadingSpanB40 = donchian(leadingSpan_2prd40)
leadingSpanB50 = donchian(leadingSpan_2prd50)
leadingSpanB60 = donchian(leadingSpan_2prd60)
leadingSpanB70 = donchian(leadingSpan_2prd70)
leadingSpanB80 = donchian(leadingSpan_2prd80)
leadingSpanB90 = donchian(leadingSpan_2prd90)
leadingSpanB100 = donchian(leadingSpan_2prd100)

laggingSpan = laggingSpan_src

// Color - bullish, bearish
col_cloud = leadingSpanA>=leadingSpanB ? color.green : color.red

// Cloud Lines
spanA = plot(ichiCloud_offset? leadingSpanA : na, offset=displ, title="Offset: Lead Line 1 - Senkou Span A cloud", color=color.green)
spanB = plot(ichiCloud_offset? leadingSpanB : na, offset=displ, title="Offset: Lead Line 2 - Senkou Span B cloud", color=color.red)
fill(spanA, spanB, color=col_cloud, transp=80, title="Offset: Ichimoku Cloud - Leading Span 1 & 2 based coloring")

// Other Lines
conversion_p = plot(ichiCloud_offset? conversion : na, title="Offset: Conversion Line - Tenkan-Sen", color=#0496ff)
standard_p = plot(ichiCloud_offset? baseline : na, title="Offset: Base Line - Kijun-Sen", color=#991515)
standardA_p = plot(ichiCloud_offset? baselineA : na, title="Offset: Base Line - Kijun-Sen (auxiliary)", color=color.teal)
lagging_Span_p = plot(ichiCloud_offset? laggingSpan : na, offset=-displ, title="Offset: Chikou Span (Lagging Span)", color=#459915)

// ------------------------------------------------------------------------------
// NO OFFSET:
conversion_noOffset = conversion[displ] // Conversion Line - Tenkan-Sen (9 Period)
baseline_noOffset  = baseline[displ]    // Base Line - Kijun-Sen (26 Period)
baselineA_noOffset = baselineA[displ]   // Base Line Period - Kijun-Sen (auxiliary)
leadingSpanA_noOffset = leadingSpanA[displ*2]
leadingSpanB_noOffset = leadingSpanB[displ*2]

leadingSpanB_noOffset20 = leadingSpanB20[displ*2]
leadingSpanB_noOffset30 = leadingSpanB30[displ*2]
leadingSpanB_noOffset40 = leadingSpanB40[displ*2]
leadingSpanB_noOffset50 = leadingSpanB50[displ*2]
leadingSpanB_noOffset60 = leadingSpanB60[displ*2]
leadingSpanB_noOffset70 = leadingSpanB70[displ*2]
leadingSpanB_noOffset80 = leadingSpanB80[displ*2]
leadingSpanB_noOffset90 = leadingSpanB90[displ*2]
leadingSpanB_noOffset100 = leadingSpanB100[displ*2]

laggingSpan_noOffset = laggingSpan[0]

// Color - bullish, bearish
col_cloud_noOffset = leadingSpanA_noOffset>=leadingSpanB_noOffset ? color.green : color.red

// Cloud Lines
spanA_noOffset = plot(ichiCloud_noOffset? leadingSpanA_noOffset : na, title="No offset: Lead Line 1 - Senkou Span A cloud", color=color.green, transp=0)

spanB_noOffset = plot(ichiCloud_noOffset? leadingSpanB_noOffset : na, title="No offset: Lead Line 2 - Senkou Span B cloud", color=leadingSpanB_noOffset < leadingSpanA_noOffset ? color.green : color.red, transp=0)
spanB_noOffset20 = plot(ichiCloud_noOffset? leadingSpanB_noOffset20 : na, title="No offset: Lead Line 2 - Senkou Span B cloud", color=leadingSpanB_noOffset20 < leadingSpanA_noOffset ? color.green : color.red, transp=0)
spanB_noOffset30 = plot(ichiCloud_noOffset? leadingSpanB_noOffset30 : na, title="No offset: Lead Line 2 - Senkou Span B cloud", color=leadingSpanB_noOffset30 < leadingSpanA_noOffset ? color.green : color.red, transp=0)
spanB_noOffset40 = plot(ichiCloud_noOffset? leadingSpanB_noOffset40 : na, title="No offset: Lead Line 2 - Senkou Span B cloud", color=leadingSpanB_noOffset40 < leadingSpanA_noOffset ? color.green : color.red, transp=0)
spanB_noOffset50 = plot(ichiCloud_noOffset? leadingSpanB_noOffset50 : na, title="No offset: Lead Line 2 - Senkou Span B cloud", color=leadingSpanB_noOffset50 < leadingSpanA_noOffset ? color.green : color.red, transp=0)
spanB_noOffset60 = plot(ichiCloud_noOffset? leadingSpanB_noOffset60 : na, title="No offset: Lead Line 2 - Senkou Span B cloud", color=leadingSpanB_noOffset60 < leadingSpanA_noOffset ? color.green : color.red, transp=0)
spanB_noOffset70 = plot(ichiCloud_noOffset? leadingSpanB_noOffset70 : na, title="No offset: Lead Line 2 - Senkou Span B cloud", color=leadingSpanB_noOffset70 < leadingSpanA_noOffset ? color.green : color.red, transp=0)
spanB_noOffset80 = plot(ichiCloud_noOffset? leadingSpanB_noOffset80 : na, title="No offset: Lead Line 2 - Senkou Span B cloud", color=leadingSpanB_noOffset80 < leadingSpanA_noOffset ? color.green : color.red, transp=0)
spanB_noOffset90 = plot(ichiCloud_noOffset? leadingSpanB_noOffset90 : na, title="No offset: Lead Line 2 - Senkou Span B cloud", color=leadingSpanB_noOffset90 < leadingSpanA_noOffset ? color.green : color.red, transp=0)
spanB_noOffset100 = plot(ichiCloud_noOffset? leadingSpanB_noOffset100 : na, title="No offset: Lead Line 2 - Senkou Span B cloud", color=leadingSpanB_noOffset100 < leadingSpanA_noOffset ? color.green : color.red, transp=0)

long_signal = leadingSpanB_noOffset < leadingSpanA_noOffset 
 and leadingSpanB_noOffset20 < leadingSpanA_noOffset
 and leadingSpanB_noOffset30 < leadingSpanA_noOffset
 and leadingSpanB_noOffset40 < leadingSpanA_noOffset
 and leadingSpanB_noOffset50 < leadingSpanA_noOffset
 and leadingSpanB_noOffset60 < leadingSpanA_noOffset
 and leadingSpanB_noOffset70 < leadingSpanA_noOffset
 and leadingSpanB_noOffset80 < leadingSpanA_noOffset
 and leadingSpanB_noOffset90 < leadingSpanA_noOffset
 and leadingSpanB_noOffset100 < leadingSpanA_noOffset 
 
short_signal = leadingSpanB_noOffset > leadingSpanA_noOffset 
 and leadingSpanB_noOffset20 > leadingSpanA_noOffset
 and leadingSpanB_noOffset30 > leadingSpanA_noOffset
 and leadingSpanB_noOffset40 > leadingSpanA_noOffset
 and leadingSpanB_noOffset50 > leadingSpanA_noOffset
 and leadingSpanB_noOffset60 > leadingSpanA_noOffset
 and leadingSpanB_noOffset70 > leadingSpanA_noOffset
 and leadingSpanB_noOffset80 > leadingSpanA_noOffset
 and leadingSpanB_noOffset90 > leadingSpanA_noOffset
 and leadingSpanB_noOffset100 > leadingSpanA_noOffset 

// ============================================================================== Strategy Component - uncomment to activate
if (long_signal)
    strategy.close("Short")
    strategy.entry("Long",strategy.long)
if (short_signal)
    strategy.close("Long")
    strategy.entry("Short",strategy.short)