//@version=5
// Copyright all rights reserved to DaviddTech
strategy('Double RSI', overlay=false, precision=3, calc_on_every_tick=false, calc_on_order_fills=false, default_qty_type=strategy.percent_of_equity, commission_value=0.05, commission_type=strategy.commission.percent, slippage=1, currency=currency.USD, default_qty_value=5, max_bars_back=3000, initial_capital=100000)
// SOURCE: https://www.youtube.com/watch?v=_VfbqW5W4do&t=1s
// Timeframe 15


// ****************************************************************************//
// ---------------------------------> Edit here ------------------------------ //
// ****************************************************************************//

isStrategyPlot = input.bool(true, "Plot strategy indicators(except oscillators)", group='Strategy: base')


stratRSILen = input.int(title="RSI Len", defval=14, group='Strategy: base')
stratRSIMainTf = input.timeframe('15', "Resolution (min)", options=['10','15','20'], group='Strategy: base')
stratRSIHighTf = input.timeframe('1D', "Resolution", options=['240','1D'], group='Strategy: base')
stratTrendUpLevel = input.int(title="RSI Trend Up Level", defval=60, group='Strategy: base')
stratTrendDownLevel = input.int(title="RSI Trend Down Level", defval=40, group='Strategy: base')
stratOverBoughtLevel = input.int(title="Over Bought", defval=70, group='Strategy: base')
stratOverSoldLevel = input.int(title="Over Sold", defval=30, group='Strategy: base')
stratSwingLen = input.int(title="Swing lenght", defval=10, group='Strategy: base')
stratRewardRate = input.float(title="Reward ratio", defval=1.5, group='Strategy: base')
stratRSISource = input.source(close, title="Source", group='Strategy: base')

stratRSIMain = request.security(syminfo.tickerid, stratRSIMainTf, ta.rsi(stratRSISource, stratRSILen))
stratRSIHigh = request.security(syminfo.tickerid, stratRSIHighTf, ta.rsi(stratRSISource, stratRSILen))

isUpTrend = stratRSIHigh > stratTrendUpLevel
isDownTrend = stratRSIHigh < stratTrendDownLevel

isOverSold = stratRSIMain < stratOverSoldLevel
isOverBought = stratRSIMain > stratOverBoughtLevel

hline(stratOverBoughtLevel, title='Over Bought Level')
hline(stratOverSoldLevel, title='Over Sold Level')
plotOverSold=hline(stratTrendUpLevel, title="RSI Trend Up Level")
plotOverBought=hline(stratTrendDownLevel, title="RSI Trend Down Level")
fill(plotOverSold,plotOverBought, color=color.new(color.blue, 95))
plot(isStrategyPlot ? stratRSIHigh : na, title='RSI Main', color=color.aqua)
plot(isStrategyPlot ? stratRSIMain : na, title='RSI High',color=color.purple)


//Full Algo

enter_long = isUpTrend and isOverSold[1] and stratRSIMain > stratOverSoldLevel
longStopLossCurrent = request.security(syminfo.tickerid, stratRSIMainTf, ta.lowest(low, stratSwingLen))
var float longStopLossVal = na
var float longTakeProfitVal = na
if enter_long and strategy.position_size == 0
    longStopLossVal := longStopLossCurrent
    longTakeProfitVal := (close - longStopLossVal) * stratRewardRate + close
plot(isStrategyPlot and enter_long ? stratRSIMain : na, title='Buy signal', color=color.green, style=plot.style_circles,  linewidth=5)


enter_short = isDownTrend and isOverBought[1] and stratRSIMain < stratOverBoughtLevel
shortStopLossCurrent = request.security(syminfo.tickerid, stratRSIMainTf, ta.highest(high, stratSwingLen))

var float shortStopLossVal = na
var float shortTakeProfitVal = na
if enter_short and strategy.position_size == 0
    shortStopLossVal := shortStopLossCurrent
    shortTakeProfitVal := close - (shortStopLossVal - close) * stratRewardRate

force_exit_signal_short = false
force_exit_signal_long = false

// Dashboard lights
_take_long_one = isUpTrend
_take_long_two = isOverSold[1]
_take_long_three = enter_long

_take_short_one = isDownTrend
_take_short_two = isOverBought[1]
_take_short_three = enter_short


// TEST

isLongStopLoss = strategy.position_size > 0 and low <= longStopLossVal
isLongTakeProfit =  strategy.position_size > 0 and high >= longTakeProfitVal

strategy.close('Long', isLongStopLoss or isLongTakeProfit, qty_percent=100)
strategy.entry(id='Long', direction=strategy.long, when=enter_long, comment='Long')



isShortStopLoss = strategy.position_size < 0 and high <= shortStopLossVal
isShortTakeProfit = strategy.position_size < 0 and low <= shortTakeProfitVal

strategy.close('Short', isShortStopLoss or isShortTakeProfit, qty_percent=100)
strategy.entry(id='Short', direction=strategy.short, when=enter_short, comment='Short')

