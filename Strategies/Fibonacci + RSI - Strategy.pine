// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© MohamedYAbdelaziz

// Intraday Trading
// Best used for Short Timeframes [1-30 Minutes]
// If you have any modifications please tell me to update it

// Tested: XLMUSDT
// 84.62% | 4.75 | 45min

//@version=5
strategy(title='Fibonacci + RSI - Strategy', overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100, initial_capital=10000, currency=currency.USD)
import PineCoders/Time/3

// Inputs
timeFilter = year >= 2000
    // Stop Loss %
loss_percent = input.float(title='Stop Loss (%)', minval=0.0, step=0.1, defval=2) * 0.001
    // RSI Inputs
len = input.int(title='[RSI] Length', minval=0, step=1, defval=14)
overSold = input(title='[RSI] Over Sold %', defval=30)
overBought = input(title='[RSI] Over Bought %', defval=70)
    // Fibonacci Levels
length = input.int(title='[Fibonacci] Length', defval=200, minval=1)
src = input(hlc3, title='[Fibonacci] Source')
mult = input.float(title='[Fibonacci] Multiplier', defval=3.0, minval=0.001, maxval=50)
level = input(title='[Fibonacci] Level', defval=764)


// Calculate Fibonacci
basis = ta.vwma(src, length)
dev = mult * ta.stdev(src, length)
fu764 = basis + 0.001 * level * dev
fu1 = basis + 1 * dev
fd764 = basis - 0.001 * level * dev
fd1 = basis - 1 * dev

// Calculate RSI
vrsi = ta.rsi(close, len)

// Calculate the Targets
targetUp = fd764
targetDown = fu764
    // Actual Targets
bought = strategy.position_size[0] > strategy.position_size[1]
exit_long = ta.valuewhen(bought, targetUp, 0)
sold = strategy.position_size[0] < strategy.position_size[1]
exit_short = ta.valuewhen(sold, targetDown, 0)

// Calculate Stop Losses
stop_long = strategy.position_avg_price * (1 - loss_percent)
stop_short = strategy.position_avg_price * (1 + loss_percent)

// Conditions to Open Trades
openLong = low < fd1 and ta.crossover(vrsi[1], overSold)
openShort = high > fu1 and ta.crossunder(vrsi[1], overBought)

// Conditions to Close Trades
closeLong = high > exit_long
closeShort = low < exit_short


// Plots
plot(basis, color=color.new(color.blue, 0), linewidth=2, title='[Fibonacci Level] Basis')
plot(fu764, color=color.new(color.white, 0), linewidth=1, title='[Fibonacci Level] Short Target')
plot(fu1, color=color.new(color.red, 0), linewidth=2, title='1', title='[Fibonacci Level] Top')
plot(fd764, color=color.new(color.white, 0), linewidth=1, title='[Fibonacci Level] Long Target')
plot(fd1, color=color.new(color.green, 0), linewidth=2, title='1', title='[Fibonacci Level] Bottom')


// LIVEMODE:: ENABLE / DISABLE
enableLiveTest = input.bool(false, title="Enable live mode and stop backtesting", group="Livemode / Backtesting")
curDate = timestamp('2023, 08, 06')
targetDate = input.time(curDate, title="Start live mode from:", group="Livemode / Backtesting")
// LIVEMODE:: END

if enableLiveTest == false or time > targetDate
    if timeFilter
        // Entry Orders
        strategy.entry(id='Long', direction=strategy.long, when=openLong and high < targetUp, limit=close)
        strategy.entry(id='Short', direction=strategy.short, when=openShort and low > targetDown, limit=close)

        // Exit Orders
        strategy.exit(id='Long', when=closeLong and strategy.position_size > 0, limit=exit_long, stop=stop_long)
        strategy.exit(id='Short', when=closeShort and strategy.position_size < 0, limit=exit_short, stop=stop_short)

