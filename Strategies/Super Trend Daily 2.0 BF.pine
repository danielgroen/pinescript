//@version=5
strategy('Super Trend Daily 2.0 BF 🚀', overlay=true, precision=2, initial_capital=100, default_qty_type=strategy.percent_of_equity, default_qty_value=100, slippage=3, commission_type=strategy.commission.percent, commission_value=0.055)

///////////// Super Trend Long /////////////
_1 = input(false, '═════ Super Trend L ═════')
lengthl = input(title='ATR Period', defval=2)
multl = input.float(title='ATR Multiplier', step=0.1, defval=1.5)

atrl = multl * ta.atr(lengthl)

longStopl = hl2 - atrl
longStopPrevl = nz(longStopl[1], longStopl)
longStopl := close[1] > longStopPrevl ? math.max(longStopl, longStopPrevl) : longStopl

shortStopl = hl2 + atrl
shortStopPrevl = nz(shortStopl[1], shortStopl)
shortStopl := close[1] < shortStopPrevl ? math.min(shortStopl, shortStopPrevl) : shortStopl

dirl = 1
dirl := nz(dirl[1], dirl)
dirl := dirl == -1 and close > shortStopPrevl ? 1 : dirl == 1 and close < longStopPrevl ? -1 : dirl

///////////// Super Trend Short /////////////
_2 = input(false, '═════ Super Trend S ═════')
lengths = input(title='ATR Period', defval=3)
mults = input.float(title='ATR Multiplier', step=0.1, defval=1.3)

atrs = mults * ta.atr(lengths)

longStops = hl2 - atrs
longStopPrevs = nz(longStops[1], longStops)
longStops := close[1] > longStopPrevs ? math.max(longStops, longStopPrevs) : longStops

shortStops = hl2 + atrs
shortStopPrevs = nz(shortStops[1], shortStops)
shortStops := close[1] < shortStopPrevs ? math.min(shortStops, shortStopPrevs) : shortStops

dirs = 1
dirs := nz(dirs[1], dirs)
dirs := dirs == -1 and close > shortStopPrevs ? 1 : dirs == 1 and close < longStopPrevs ? -1 : dirs

///////////// Rate Of Change Long ///////////// 
_3 = input(false, '═════ Rate of Change L ═════')
sourcel = close
roclengthl = input.int(30, 'ROC Length', minval=1)
pcntChangel = input.int(6, 'ROC % Change', minval=1)
rocl = 100 * (sourcel - sourcel[roclengthl]) / sourcel[roclengthl]
emarocl = ta.ema(rocl, roclengthl / 2)
isMovingl() =>
    emarocl > pcntChangel / 2 or emarocl < 0 - pcntChangel / 2

///////////// Rate Of Change Short ///////////// 
_4 = input(false, '═════ Rate of Change S ═════')
sources = close
roclengths = input.int(76, 'ROC Length', minval=1)
pcntChanges = input.int(6, 'ROC % Change', minval=1)
rocs = 100 * (sources - sources[roclengths]) / sources[roclengths]
emarocs = ta.ema(rocs, roclengths / 2)
isMovings() =>
    emarocs > pcntChanges / 2 or emarocs < 0 - pcntChanges / 2

/////////////// Strategy /////////////// 
long = dirl == 1 and dirl[1] == -1 and isMovingl()
short = dirs == -1 and dirs[1] == 1 and isMovings()

last_long = 0.0
last_short = 0.0
last_long := long ? time : nz(last_long[1])
last_short := short ? time : nz(last_short[1])

long_signal = ta.crossover(last_long, last_short)
short_signal = ta.crossover(last_short, last_long)

last_open_long_signal = 0.0
last_open_short_signal = 0.0
last_open_long_signal := long_signal ? open : nz(last_open_long_signal[1])
last_open_short_signal := short_signal ? open : nz(last_open_short_signal[1])

last_long_signal = 0.0
last_short_signal = 0.0
last_long_signal := long_signal ? time : nz(last_long_signal[1])
last_short_signal := short_signal ? time : nz(last_short_signal[1])

in_long_signal = last_long_signal > last_short_signal
in_short_signal = last_short_signal > last_long_signal

last_high = 0.0
last_low = 0.0
last_high := not in_long_signal ? na : in_long_signal and (na(last_high[1]) or high > nz(last_high[1])) ? high : nz(last_high[1])
last_low := not in_short_signal ? na : in_short_signal and (na(last_low[1]) or low < nz(last_low[1])) ? low : nz(last_low[1])

since_longEntry = ta.barssince(last_open_long_signal != last_open_long_signal[1])
since_shortEntry = ta.barssince(last_open_short_signal != last_open_short_signal[1])

/////////////// Stop Losses Long ///////////////
_5 = input(false, '═══════ Stop Loss L ══════')
SL_typel = input.string('Fixed', options=['Fixed', 'ATR Derived'], title='Stop Loss Type')
sl_inpl = input(5.0, title='Fixed Stop Loss %') / 100
atrLkbl = input.int(20, minval=1, title='ATR Stop Period')
atrMultl = input.float(1.5, step=0.25, title='ATR Stop Multiplier')
atr1l = ta.atr(atrLkbl)

longStop1l = 0.0
longStop1l := short_signal ? na : long_signal ? close - atr1l * atrMultl : longStop1l[1]

slLongl = in_long_signal ? strategy.position_avg_price * (1 - sl_inpl) : na
long_sll = in_long_signal ? slLongl : na

/////////////// Stop Losses Short ///////////////
_6 = input(false, '═══════ Stop Loss S ══════')
SL_types = input.string('Fixed', options=['Fixed', 'ATR Derived'], title='Stop Loss Type')
sl_inps = input(6.0, title='Fixed Stop Loss %') / 100
atrLkbs = input.int(20, minval=1, title='ATR Stop Period')
atrMults = input.float(1.5, step=0.25, title='ATR Stop Multiplier')
atr1s = ta.atr(atrLkbs)

shortStop1s = 0.0
shortStop1s := long_signal ? na : short_signal ? close + atr1s * atrMults : shortStop1s[1]

slShorts = strategy.position_avg_price * (1 + sl_inps)
short_sls = in_short_signal ? slShorts : na

_7 = input(false, '══════ Longs or Shorts ═════')
useLongs = input(true, title='Use Longs')
useShorts = input(true, title='Use Shorts')

/////////////// Execution ///////////////

// LIVEMODE:: ENABLE / DISABLE
enableLiveTest = input.bool(false, title="Enable live mode and stop backtesting", group="Livemode / Backtesting")
curDate = timestamp('2023, 08, 06')
targetDate = input.time(curDate, title="Start live mode from:", group="Livemode / Backtesting")
// LIVEMODE:: END

if enableLiveTest == false or time > targetDate
    if useLongs
        strategy.entry('L', strategy.long, when=long)
        strategy.exit('L SL', 'L', stop=SL_typel == 'Fixed' ? long_sll : longStop1l, when=since_longEntry > 0)
    if useShorts
        strategy.exit('S SL', 'S', stop=SL_types == 'Fixed' ? short_sls : shortStop1s, when=since_shortEntry > 0)
        strategy.entry('S', strategy.short, when=short)
    if not useShorts
        strategy.close('L', when=short)
    if not useLongs
        strategy.close('S', when=long)

/////////////// Plotting /////////////// 
bgcolor(long_signal ? color.lime : short_signal ? color.red : na, transp=40)
bgcolor(not isMovings() ? color.white : not isMovingl() ? color.aqua : na, transp=90)
p0 = plot(close, color=color.new(color.black, 0))
p1 = plot(strategy.position_size <= 0 ? na : SL_typel == 'Fixed' ? long_sll : longStop1l, title='Long Stop Loss', color=color.new(color.yellow, 0), style=plot.style_linebr, linewidth=2)
p2 = plot(strategy.position_size >= 0 ? na : SL_types == 'Fixed' ? short_sls : shortStop1s, title='Short Stop Loss', color=color.new(color.orange, 0), style=plot.style_linebr, linewidth=2)
p3 = plot(strategy.position_size <= 0 ? na : strategy.position_avg_price, style=plot.style_linebr, title='Long Entry', color=color.new(color.green, 0), linewidth=2)
p4 = plot(strategy.position_size >= 0 ? na : strategy.position_avg_price, style=plot.style_linebr, title='Short Entry', color=color.new(color.red, 0), linewidth=2)
fill(p0, p3, color=color.new(color.lime, 60))
fill(p0, p4, color=color.new(color.red, 60))

