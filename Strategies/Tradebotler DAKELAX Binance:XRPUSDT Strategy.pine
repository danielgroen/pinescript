//@version=5

// Found: on TV
// Tested: with XRPUSDT | 30min
// Results: 71% | 2.54

//study(title="Tradebotler DAKELAX Binance:XRPUSDT Study-strategy", overlay=true)
strategy(title='Tradebotler DAKELAX Binance:XRPUSDT Strategy', overlay=true)

buyAmount = input.int(20, minval=1)

// SMA20
len2 = input.int(20, minval=1)
src2 = input(close)
out2 = ta.sma(src2, len2)

// BB contraction value (medium tight)
contraction_value = 1.3
// BB contraction value (very tight)
contraction_value2 = 0.1

// 2xSTDEV BB calculation
dev = ta.stdev(src2, len2)
upper_BB = out2 + 1.5 * dev
lower_BB = out2 - 2.2 * dev
x1 = plot(upper_BB, color=color.new(color.blue, 0), linewidth=2)
x2 = plot(lower_BB, color=color.new(color.blue, 0), linewidth=2)

contraction = (upper_BB - lower_BB) / out2

//fills the BBands according to the contraction value (threshold)

// Calculate values
fastMA = ta.ema(close, 7)
slowMA = ta.ema(close, 18)

// Determine alert setups
crossUp = ta.crossover(fastMA, slowMA)
crossDown = ta.crossunder(fastMA, slowMA)

buySignal = (crossUp or crossUp[1]) and low > slowMA
shortSignal = (crossDown or crossDown[1]) and high < slowMA

// Highlight alerts on the chart
bgColour = buySignal and barstate.isrealtime ? color.green : shortSignal and barstate.isrealtime ? color.red : na

signalBuy = buySignal ? true : false
signalSell = shortSignal ? true : false

test = true

test := not test[1]

closesBelowLowerBB = close < lower_BB
closesAboveUpperBB = close > upper_BB

tmptext = 'blah'

// Plot values
plot(series=fastMA, color=color.new(color.teal, 0))
plot(series=slowMA, color=color.new(color.orange, 0))

plot(out2, color=color.new(color.black, 0), linewidth=1)
fill(x1, x2, color=contraction > contraction_value ? color.black : contraction < contraction_value2 ? color.yellow : color.red, transp=90)

isInRed = contraction < contraction_value and contraction >= contraction_value2
isInYellow = contraction < contraction_value and contraction < contraction_value2

// LIVEMODE:: ENABLE / DISABLE
enableLiveTest = input.bool(false, title="Enable live mode and stop backtesting", group="Livemode / Backtesting")
curDate = timestamp('2023, 08, 06')
targetDate = input.time(curDate, title="Start live mode from:", group="Livemode / Backtesting")
// LIVEMODE:: END

if enableLiveTest == false or time > targetDate
    if closesBelowLowerBB
        strategy.order('Buy', strategy.long, buyAmount)

    if closesAboveUpperBB
        strategy.close_all()